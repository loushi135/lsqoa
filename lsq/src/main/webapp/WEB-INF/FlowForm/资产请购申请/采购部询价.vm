Ext.MyForm = Ext.extend(Ext.form.FormPanel, {
	xtype : "formpanel",
	title : "资产请购审批表",
	labelWidth : 100,
	labelAlign : "left",
	layout : "form",
	width : 600,
	autoHeight : true,
	padding : "3px",
	initComponent : function() {
		this.items = [{
					xtype : "label",
					name : "MyLabel",
					text : "资产请购审批表",
					width : "",
					style : "padding-left:250px;font-weight:bold;font-size:20px;"
				}, {
					xtype : 'hidden',
					name : 'applyUserId',
					id : 'flow_applyUserId'
				}, {
					fieldLabel : '快速回复',
					xtype : 'combo',
					mode : 'local',
					editable : false,
					anchor : '90%,90%',
					triggerAction : 'all',
					store : ['同意', '不同意'],
					listeners : {
						select : {
							fn : function(field, record, index) {
								var options = Ext.getCmp('superOption');
								if (options != null) {
									options.setValue(field.getValue());
									if (field.getValue() == '不同意') {
										Ext.getCmp('pass').setDisabled(true);
										Ext.getCmp('unPass').setDisabled(false);
										Ext.getCmp('backReturnBtn')
												.setDisabled(false);
										Ext.getCmp('freeTransCombo')
												.setDisabled(false);
									} else {
										Ext.getCmp('pass').setDisabled(false);
										Ext.getCmp('unPass').setDisabled(true);
										Ext.getCmp('backReturnBtn')
												.setDisabled(true);
										Ext.getCmp('freeTransCombo')
												.setDisabled(true);
									}
								}
							}
						}
					}
				}, {
					xtype : 'container',
					autoHeight : true,
					layout : 'column',
					autoWidth : true,
					defaultType : 'label',
					style : 'padding-left:0px;padding-bottom:5px;',
					items : [{
								text : '附件:',
								width : 95,
								style : 'padding-left:0px;padding-top:3px;'
							}, {
								xtype : 'hidden',
								name : 'commonAttachIDs',
								id : 'flow_commonAttachIDs_assert'
							}, {
								xtype : 'hidden',
								name : 'commonAttachFile',
								id : 'flow_commonAttachFile_assert'
							}, {
								xtype : 'panel',
								id : 'flow_commonDisplayAttach_assert',
								width : 437,
								height : 65,
								frame : false,
								autoScroll : true,
								style : 'padding-left:10px;padding-top:0px;',
								html : ''
							}, {
								xtype : 'button',
								iconCls : 'btn-upload',
								text : '上传',
								handler : function() {

									var dialog = App.createUploadDialog({
										file_cat : 'flow/common',
										callback : function(data) {
											Ext
													.getCmp('flow_commonDisplayAttach_assert').body
													.update('');
											Ext
													.getCmp("flow_commonAttachFile_assert")
													.setValue('');
											Ext
													.getCmp('flow_commonAttachIDs_assert')
													.setValue('');
											var contractFile = Ext
													.getCmp("flow_commonAttachFile_assert");
											var fileIds = Ext
													.getCmp('flow_commonAttachIDs_assert');
											var display = Ext
													.getCmp('flow_commonDisplayAttach_assert');
											for (var i = 0; i < data.length; i++) {
												if (fileIds.getValue() != '') {
													fileIds.setValue(fileIds
															.getValue()
															+ ',');
													contractFile
															.setValue(contractFile
																	.getValue()
																	+ ',');
												}
												contractFile
														.setValue(contractFile
																.getValue()
																+ data[i].filepath
																+ ":"
																+ data[i].filename
																		.replace(
																				/\s+/g,
																				""));
												// contractFile.setValue(contractFile.getValue()+"<a
												// href=javascript:window.location.href=\""+__ctxPath+"/file-Download?filePath=attachFiles/"+data[i].filepath+"&fileName="+data[i].filename.replace(/\s+/g,"")+"\">"+data[i].filename.replace(/\s+/g,"")+"</a>");
												fileIds.setValue(fileIds
														.getValue()
														+ data[i].fileId);
												Ext.DomHelper
														.append(
																display.body,
																'<span><a href="#" onclick="FileAttachDetail.show('
																		+ data[i].fileId
																		+ ')">'
																		+ data[i].filename
																				.replace(
																						/\s+/g,
																						"")
																		+ '</a>&nbsp;|&nbsp;</span>');
											}
										},
										permitted_max_size : 1024 * 1024 * 20,
										permitted_extensions_size : [{
											'type' : ['jpg', 'png', 'gif',
													'bmp', 'jpeg'],
											'MaxSize' : 1024 * 800
										}]
									});
									dialog.show(this);
								}
							}]
				}, {
					fieldLabel : '审批意见',
					xtype : 'textarea',
					id : 'superOption',
					name : 'superOption',
					allowBlank : false,
					anchor : '90%'
				}, {
					xtype : 'container',
					layout : 'column',
					id : 'dataContainer',
					style : 'padding-left:0px;padding-top:10px;',
					items : [{
								xtype : 'label',
								style : 'padding-left:0px;padding-top:3px;',
								text : '资产明细列表:',
								width : 80
							}, {
								xtype : 'label',
								style : 'padding-left:0px;padding-top:3px;color:red',
								text : '(*必填)',
								width : 80
							}, {
								name : 'resultGridData',
								xtype : 'hidden',
								id : 'flow_resultGridData',
								anchor : '95.5%',
								allowBlank : false,
								width : 150,
								editable : true,
								readOnly : false
							}, {
								xtype : 'grid',
								id : 'flow_resultGridDataGrid',
								style : 'margin-top:10px;',
								height : 200,
								width : 720,
								stripeRows : true,
								trackMouseOver : true,
								clicksToEdit : 1,
								plugins : [new Ext.ux.grid.RowEditor({
											saveText : '保存',
											cancelText : '取消',
											errorText : '请输入完整信息',
											errorSummary : false
										})],
								store : new Ext.data.ArrayStore({
									url : '',
									remoteSort : false,
									fields : ['name', 'model', 'brand', 'unit',
											'arrivalDate', 'num', 'price'],
									listeners : {
										'update' : function(value) {
											var grid = Ext
													.getCmp('resultGridDataGrid');
											var r = this.getRange();
											var resultArray = [];
											var sum = 0;
											var num = 0;
											var rlen = r.length;
											for (var i = 0; i < rlen; i++) {
												resultArray.push([]);
												if (r[i].fields) {
													var fields = r[i].fields;
													var flen = fields.length;
													for (var z = 0; z < flen; z++) {
														var fieldValue = r[i]
																.get(fields.keys[z]);
														if (fieldValue == '请双击输入'
																|| fieldValue == ''
																|| typeof(fieldValue) == 'undefined') {
															continue;
														}
														if (fields.keys[z] == 'arrivalDate') {
															if (fieldValue != '') {
																// alert(FormatGMTtoLocal(fieldValue,"yyyy-MM-dd"));
																resultArray[i]
																		.push('到货日期:'
																				+ FormatGMTtoLocal(
																						fieldValue,
																						"yyyy-MM-dd"));
															} else {
																resultArray[i]
																		.push('到货日期:'
																				+ '');
															}

														} else if (fields.keys[z] == 'price') {
															resultArray[i]
																	.push('单价:'
																			+ fieldValue
																			+ ';');
														} else if (fields.keys[z] == 'name') {
															resultArray[i]
																	.push('品名:'
																			+ fieldValue
																					.replace(
																							new RegExp(
																									',',
																									'g'),
																							'，'));
														} else if (fields.keys[z] == 'model') {
															resultArray[i]
																	.push('规格型号:'
																			+ fieldValue
																					.replace(
																							new RegExp(
																									',',
																									'g'),
																							'，'));
														} else if (fields.keys[z] == 'brand') {
															resultArray[i]
																	.push('品牌:'
																			+ fieldValue
																					.replace(
																							new RegExp(
																									',',
																									'g'),
																							'，'));
														} else if (fields.keys[z] == 'unit') {
															resultArray[i]
																	.push('单位:'
																			+ fieldValue);
														} else if (fields.keys[z] == 'num') {
															resultArray[i]
																	.push('数量:'
																			+ fieldValue);
														}

														if (fields.keys[z] == 'num') {
															num = fieldValue;
														}
														if (fields.keys[z] == 'price') {
															sum = sum
																	+ Number(fieldValue)
																	* num;
															Ext
																	.getCmp('flow_prePrice')
																	.setValue(sum);

														}

													}
												}
											}

											// 删除空元素
											for (var i = 0; i < resultArray.length; i++) {
												if (resultArray[i].length == 0) {
													resultArray.splice(i, 1);
													i--;
												}
											}

											Ext.getCmp('flow_resultGridData')
													.setValue(resultArray);
										}
									}
								}),
								cm : new Ext.grid.ColumnModel({
									columns : [new Ext.grid.RowNumberer(), {
										header : '品名',
										editable : false,
										dataIndex : 'name',
										width : 100,
										editor : new Ext.grid.GridEditor(new Ext.form.TextField(
												{
													allowBlank : false,
													blankText : '品名不能为空',
													listeners : {
														'focus' : function(txt) {
															txt.setValue('');

														}
													}
												}))
									}, {
										header : '规格型号',
										editable : false,
										dataIndex : 'model',
										width : 100,
										editor : new Ext.grid.GridEditor(new Ext.form.TextField(
												{
													allowBlank : false,
													blankText : '规格型号不能为空'
												}))
									}, {
										header : '品牌',
										dataIndex : 'brand',
										editable : false,
										width : 90,
										editor : new Ext.grid.GridEditor(new Ext.form.TextField(
												{
													allowBlank : false,
													blankText : '品牌不能为空'
												}))
									}, {
										header : '单位',
										editable : false,
										dataIndex : 'unit',
										editor : new Ext.grid.GridEditor(new Ext.form.TextField(
												{
													allowBlank : false,
													blankText : '单位不能为空'
												})),
										width : 50
									}, {
										header : '到货日期',
										editable : false,
										dataIndex : 'arrivalDate',
										editor : new Ext.grid.GridEditor(new Ext.form.DateField(
												{
													allowBlank : false,
													blankText : '到货日期不能为空',
													format : 'Y-m-d',
													width : 100,
													minValue : formatDate(
															new Date(),
															'yyyy-MM-dd')
													// 允许选择的最小日期
												})),
										width : 80,
										renderer : function(value) {
											if (value == '') {
												return '';
											} else if (typeof value == "string") {
												return value;
											} else {
												return formatDate(value,
														'yyyy-MM-dd');
											}
										}
									}, {
										header : '数量',
										editable : false,
										dataIndex : 'num',
										editor : new Ext.grid.GridEditor(new Ext.form.NumberField(
												{
													allowBlank : false,
													blankText : '数量不能为空'
												})),
										width : 50,
										renderer : function(value) {
											return value == '' ? 0 : value;
										}
									}, {
										header : '预估单价',
										dataIndex : 'price',
										editor : new Ext.grid.GridEditor(new Ext.form.TextField(
												{
													allowBlank : false,
													id : 'txtPrice',
													regex : /^(([1-9]\d{0,9})|0)(\.\d{1,2})?$/,
													regexText : '请输入正确格式的金额',
													blankText : '预估单价不能为空',
													listeners : {
														blur : function(field) {
															var price = field
																	.getValue();
															if (parseFloat(price) < 2000) {
																Ext.MessageBox
																		.show({
																			title : '操作信息',
																			msg : '2000元以下的请购请走办公用品申请！',
																			buttons : Ext.MessageBox.OK,
																			icon : Ext.MessageBox.INFO
																		});
																field
																		.setValue('');
															}
														}
													}
												})),
										width : 60,
										renderer : function(value) {
											return value == '' ? 0 : value;
										}
									}],
									defaults : {
										sortable : false,
										menuDisabled : false,
										width : 70
									}
								})
							}]

				}, {
					xtype : 'container',
					layout : 'column',
					id : 'totalContainer',
					style : 'padding-left:0px;padding-top:10px;',
					items : [{
								xtype : 'label',
								style : 'padding-left:0px;padding-top:3px;',
								text : '预估总价(所有项目):',
								width : 120
							}, {
								name : 'prePrice',
								xtype : 'textfield',
								id : 'flow_prePrice',
								anchor : '95.5%',
								allowBlank : false,
								style : "background:#F0F0F0;",
								width : 445,
								editable : false,
								readOnly : true,
								regex : /^(([0-9]+\.?\d{0,1}[0-9])|([0-9]*[1-9][0-9]*\.?\d{0,1}[0-9])|([0-9]*[1-9][0-9]*))$/,
								regexText : '请输入正确格式的金额'
							}]
				}]

		Ext.MyForm.superclass.initComponent.call(this);

		Ext.Ajax.request({
					url : __ctxPath + "/flow/getByRunIdLastProcessForm.do",
					params : {
						runId : $runId
					},
					success : function(response, options) {
						// alert(response.responseText);
						var result = Ext.util.JSON
								.decode(response.responseText);

						var prefix = "";
						var attachId;
						var attachFile;
						for (var item in result) {
							var cmp = Ext.getCmp('flow_' + item);
							var bigItem = Ext.util.Format.lowercase(item);
							if (cmp != null && cmp != 'undefined') {

								if (cmp.getXType() == 'datefield'
										|| cmp.getXType() == 'timefield'
										|| cmp.getXType() == 'datetimefield') {

									if (!Ext.isEmpty(result[item])
											&& result[item] != 'null') {
										cmp
												.setValue(new Date(getDateFromFormat(
														result[item].substring(
																0, 19),
														"yyyy-MM-dd HH:mm:ss")));
									}
								} else if (cmp.getXType() == 'radio') {
									if (result[item] == '是'
											|| result[item] == '有'
											|| result[item] == '良好'
											|| result[item] == '公开招聘') {
										cmp.setValue(true);
									} else {
										Ext.getCmp(item + 'No').setValue(true);
									}
								} else if (item.indexOf('attachFiles') != -1
										|| bigItem.indexOf('attachfile') != -1) {
									attachFile = result[item];
									cmp.setValue(result[item]);
								} else if (item.indexOf('attachIds') != -1
										|| bigItem.indexOf('attachid') != -1) {
									attachId = result[item];
									cmp.setValue(result[item]);
								} else if (item.indexOf('GridData') != -1) {
									var rows = result[item].replace(/;,/g, ";")
											.trim().split(';');
									var arrrows = new Array();

									if (rows != null && rows != '') {
										for (i = 0; i < rows.length; i++) {
											var arrcolumns = new Array();
											var columns = rows[i].split(',');

											if (columns != null
													&& columns != '') {
												for (j = 0; j < columns.length; j++) {
													// alert(columns[j].substring(columns[j].indexOf(':')+1));
													arrcolumns
															.push(columns[j]
																	.substring(columns[j]
																			.indexOf(':')
																			+ 1));
												}
											}
											arrrows.push(arrcolumns);
										}
									}

									// 去除空元素
									for (k in arrrows)
										if (arrrows[k] == "")
											arrrows.splice(k, k + 1);

									// alert(arrrows);
									// 载入数据
									Ext.getCmp('flow_' + item + 'Grid')
											.getStore().loadData(arrrows);
									Ext.getCmp('flow_' + item + 'Grid')
											.getStore().fireEvent('update');
								} else {
									cmp.setValue(result[item] == null
											|| result[item] == ''
											|| result[item] == 'null'
											? ''
											: result[item]);
								}

								if (cmp.getValue() != null
										&& cmp.getValue() != '') {
									cmp.enable();
								}
							}
						}
						// alert(Ext.get(Ext.query("*[id$=displayAttach]")[0]).first().first());
						if (attachId != null && attachId != 'undefined'
								&& attachFile != null
								&& attachFile != 'undefined') {
							var ids = attachId.split(',');
							var files = attachFile.split(',');
							for (var i = 0; i < ids.length; i++) {
								if (files[i].lastIndexOf(':') != -1) {
									var fg = files[i].split(':');
									Ext.DomHelper
											.append(
													Ext
															.get(Ext
																	.query("*[id$=displayAttach]")[0])
															.first().first(),
													'<span><a href="#" onclick="FileAttachDetail.show('
															+ ids[i]
															+ ')">'
															+ fg[1].replace(
																	/\s+/g, "")
															+ '</a>&nbsp;|&nbsp;</span>');
								}
							}
						}

					}
				});
	}
})
